---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, readingTime } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0 auto;
				padding-top: 0;
			}
			.prose {
				width: 720px;
				max-width: 100%;
				margin: auto;
			}
			.title {
				display: flex;
				flex-direction: column;
				justify-content: center;
				align-items: center;
				max-width: calc(100% - 2em);
				width: fit-content;
				text-align: center;
				padding: 1.5rem 2rem;
				margin: auto;
				border: 4px solid var(--border);
				border-bottom-width: 8px;
				background: var(--white);
			}
			.title h1 {
				margin: 0 0 0.5em 0;
				max-width: 1024px;
				counter-reset: h2counter;
			}
			.date {
				margin-bottom: 0;
			}
			.last-updated-on {
				font-style: italic;
			}
			.post-header {
				position: relative;
				padding: 5em 0;
				border-bottom: 4px solid var(--border);
			}
			.post-image {
				position: absolute;
				background-repeat: no-repeat;
				background-size: cover;
				background-position: center;
				inset: 0;
				z-index: -1;
			}
			.post-image:after {
				content: '';
				position: absolute;
				opacity: 0.8;
				inset: 0;
				background: var(--background);
			}

			h1 {
				counter-reset: h2counter;
			}

			.prose h2 {
				counter-increment: h2counter;
				counter-reset: h3counter;
			}

			.prose h2:before {
				content: counter(h2counter) '.';
			}

			.prose h3:before {
				content: counter(h2counter) '.' counter(h3counter) '.';
				counter-increment: h3counter;
			}
			@media (min-width: 600px) {
				.prose {
					max-width: calc(100% - 2em);
				}
				.post-header {
					margin-bottom: 2em;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<div class="post-header">
			<div class="post-image" style=`background-image: url(${heroImage})`></div>
			<div class="title">
				<h1>{title}</h1>
				<div class="date">
					<FormattedDate date={pubDate} /> - {readingTime}
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
			</div>
		</div>
		<main>
			<article>
				<div class="prose">
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
